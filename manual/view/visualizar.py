# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z8ci-6mzAaBlcZD7lRaiCmUhczQE0DSZ
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from ipywidgets import interact, widgets, interactive_output
from IPython.display import display
from google.colab import drive

drive.mount('/content/drive')

# Cargar datos
df = pd.read_excel("/content/drive/MyDrive/datos_procesados.xlsx", sheet_name="Sheet1")

# Limpiar espacios en columnas clave
for col in ['TIPO DELITO', 'CODIGO PENAL']:
    df[col] = df[col].astype(str).str.strip()

# Crear columna de fecha
df['Fecha'] = pd.to_datetime(dict(year=df['Año'], month=df['Mes'], day=1))

# Crear widgets base
tipo_delito_widget = widgets.Dropdown(
    options=sorted(df['TIPO DELITO'].unique()),
    description='Delito:'
)

codigo_penal_widget = widgets.Dropdown(
    options=[],
    description='Código:'
)

anio_widget = widgets.Dropdown(
    options=sorted(df['Año'].unique()),
    description='Año:'
)

# Función para actualizar opciones del código penal
def actualizar_codigos_penal(*args):
    tipo = tipo_delito_widget.value
    codigos = sorted(df[df['TIPO DELITO'] == tipo]['CODIGO PENAL'].unique())
    codigo_penal_widget.options = ['TODOS'] + codigos

tipo_delito_widget.observe(actualizar_codigos_penal, names='value')
actualizar_codigos_penal()  # Inicializar

# Función de gráfico
def graficar(tipo_delito, codigo_penal, anio):
    datos = df[(df['TIPO DELITO'] == tipo_delito) & (df['Año'] == anio)]

    if codigo_penal != "TODOS":
        datos = datos[datos['CODIGO PENAL'] == codigo_penal]

    if datos.empty:
        print("No hay datos para los filtros seleccionados.")
        return

    datos_agrupados = datos.groupby('Fecha')['TOTAL'].sum().reset_index()

    plt.figure(figsize=(12, 6))
    sns.lineplot(data=datos_agrupados, x='Fecha', y='TOTAL', marker='o')
    titulo = f"{tipo_delito} - {codigo_penal if codigo_penal != 'TODOS' else 'TODOS los códigos'} ({anio})"
    plt.title(titulo)
    plt.xlabel("Fecha")
    plt.ylabel("Total")
    plt.grid(True)
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

# Conexión entre widgets y función
ui = widgets.VBox([tipo_delito_widget, codigo_penal_widget, anio_widget])
out = interactive_output(graficar, {
    "tipo_delito": tipo_delito_widget,
    "codigo_penal": codigo_penal_widget,
    "anio": anio_widget
})

display(ui, out)